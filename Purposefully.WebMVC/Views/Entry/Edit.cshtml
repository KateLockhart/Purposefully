@model Purposefully.Models.EntryModels.EntryEdit

@{
    ViewBag.Title = "Edit";
}

<h2 style="margin-top: 5%; margin-left: 5%">Edit Journal Entry</h2>
<h5 style="margin-top: 3%; margin-left: 10%; margin-right: 10%;">Here you can edit the entry you selected. Please be sure to double check for the correct entry or goal ID number associated with your entry.</h5>
<hr style="margin-bottom: 1%;" />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div id="EntryCreateForm">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-horizontal" style="margin-left: 24%; margin-top: 5%">
            <br />
            <div class="form-row">
                @Html.LabelFor(model => model.EntryId, "Entry ID# to Edit:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EntryId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EntryId, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <br />
            <div class="form-row">
                @Html.LabelFor(model => model.EntryTitle, "Entry Title:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EntryTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EntryTitle, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <br />
            <div class="form-row">
                @Html.LabelFor(model => model.EntryContent, "Entry Content:", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.EntryContent, new { htmlAttributes = new { @class = "form-control col-md-10" } })
                    @Html.ValidationMessageFor(model => model.EntryContent, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <br />
            <div class="form-row">
                @Html.LabelFor(model => model.ForGoal, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <div class="form-check-input" id="gridRadios1">
                        @Html.EditorFor(model => model.ForGoal)
                        @Html.ValidationMessageFor(model => model.ForGoal, "", new { @class = "text-danger" })
                        <label class="form-check-label" for="gridRadios1">
                            For Goal
                        </label>
                    </div>
                </div>
            </div>
            <br />
            <br />
            <div class="form-row">
                @Html.LabelFor(model => model.GoalId, "Please enter the ID number of your connected goal:", htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-2">
                    @Html.EditorFor(model => model.GoalId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GoalId, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <br />
            <div class="form-row">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-info" />
                </div>
            </div>
        </div>
    </div>
}

<div style="margin-left: 10%; margin-top: 5%; margin-bottom: 5%;">
    <button class="btn" type="button">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-outline-info btn-lg" })
    </button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
